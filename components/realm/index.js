import {FenceGroup} from "../models/fence-group";import {Judger} from "../models/judger";import string from "../../miniprogram_npm/lin-ui/common/async-validator/validator/string"import {Spu} from "../../models/spu"Component({    /**     * 组件的属性列表     */    properties: {        spu: Object    },    data: {        fences: Array,        judger: Object,        previewImg: String,        title: String,        price: String,        discountPrice: String,        stock: String,        // 表示是否有规格        noSpec: Boolean,        // 是否选择了完整的sku        skuIntact: Boolean    },    observers: {        'spu': function (spu) {            if (!spu) {                return            }            if (Spu.isNoSpec(spu)) {                // 无规格                this.processNoSpec(spu)            } else {                // 有规格                this.processHasSpec(spu)            }        }    },    methods: {        processNoSpec(spu) {            this.setData({                noSpec: true,            })            this.bindSkuData(spu.sku_list[0])        },        processHasSpec(spu) {            const fenceGroup = new FenceGroup(spu)            fenceGroup.initFences()            const judger = new Judger(fenceGroup)            this.data.judger = judger            const defaultSku = fenceGroup.getDefaultSku()            if (defaultSku) {                this.bindSkuData(defaultSku)            } else {                this.bindSpuData()            }            this.bindTipData()            this.bindFenceGroupData(fenceGroup)        },        // 如果默认spu不存在        bindSpuData() {            const spu = this.properties.spu            this.setData({                previewImg: spu.img,                title: spu.title,                price: spu.price,                discountPrice: spu.discount_price,            })        },        // 如果默认spu存在        bindSkuData(sku) {            this.setData({                previewImg: sku.img,                title: sku.title,                price: sku.price,                discountPrice: sku.discount_price,                stock: sku.stock,            })        },        bindTipData() {            this.setData({                skuIntact: this.data.judger.isSkuIntact()            })        },        bindFenceGroupData(fenceGroup) {            this.setData({                fences: fenceGroup.fences,            })        },        onCelltap(event) {            const cell = event.detail.cell            const x = event.detail.x            const y = event.detail.y            const judger = this.data.judger            judger.judge(cell, x, y)            // 点击之后, 上半部数据处理            const skuIntact = judger.isSkuIntact()            if (skuIntact) {                // 产生了完整的sku的情况下, 上半部分数据需要改变            }            this.bindFenceGroupData(judger.fenceGroup)        }    }})